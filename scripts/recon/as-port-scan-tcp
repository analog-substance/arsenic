#! /bin/bash

####
## BEGIN: Load common functions

if [ -z "$ARSENIC_PATH" ]; then
  pushd $(dirname $(dirname $(dirname ${BASH_SOURCE[0]}))) > /dev/null
  export ARSENIC_PATH=`pwd`
  popd > /dev/null
fi

if [ -f "$ARSENIC_PATH/etc/common.sh" ]; then
  source "$ARSENIC_PATH/etc/common.sh"
fi

## END: Load common functions
####

CMD=""
ARG=""
if [ ! -z "$1" ]; then
  CMD="$1"
fi

if [ ! -z "$2" ]; then
  ARG="$2"
fi

if [ -z "$CMD" ] ; then
  CMD="scan"
fi

# set -x
set -euo pipefail

function getHosts {
  gitPull

  {
    find hosts -name 'nmap-*tcp*'  | cut -d/ -f2
    ls -d hosts/* | cut -d/ -f2
  } | as-prune-blacklisted-ips | sort -h | uniq -c | grep -P "^\s+1 " | awk '{print $2}' | sort -R
}

function scanHost {
  host="$1"
  if [ "$host" == "" ]; then
    return
  fi

  _ "Port Scan / TCP / $host / checking"
  if ! compgen -G "hosts/$host/recon/nmap-punched*tcp*" > /dev/null 2>&1; then
    _info "Port Scan / TCP / $host / preparing"
    mkdir -p "hosts/$host/recon"
    gitLock "hosts/$host/recon/nmap-punched-quick-tcp.xml" "new host: $host"

    cd "hosts/$host"
    _info "Port Scan / TCP / $host / running"
    as-recon-discover-services "$host"
    gitCommit "." "recon host: $host"
    cd -

    _info "Port Scan / TCP / $host / complete"
  fi

  ARG=$(head -n1 <<<$(getHosts | sort -R))
  if [ ! -z "$ARG" ] ; then
    exec $0 scan "$ARG"
  fi
}

gitPull

if [ "$CMD" == "list" ]; then
  getHosts
  exit
fi

if [ "$CMD" == "scan" ] ; then
  if [ -z "$ARG" ] ; then
    ARG=$(head -n1 <<<$(getHosts | sort -R))
    if [ "$ARG" == "" ]; then
      exit
    fi
    _warn "Auto selected $ARG"
  fi
  scanHost "$ARG"
fi
