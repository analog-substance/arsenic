#! /bin/bash



PORTS="80|443|3000|8000|8001|8080|8443"

function getAquatonedHosts {
  echo $(find hosts -name aquatone -type d | awk -F/ '{print $2}' | sort -h | uniq)|sed 's/ /|/g' | sed 's/\./\\./g'
}

function getAquatonableHosts {
  grep_options="-vP"
  aquatoned=`getAquatonedHosts`
  if [[ -z "$aquatoned" ]]; then
    grep_options="-P"
  fi

  # grab all hosts with open $PORTS we're interested in
  grep -l -rP "$PORTS" hosts/*/recon/nmap-* \
  | awk -F/ '{print $2}' \
  | sort -h | uniq \
  | grep $grep_options "$aquatoned"
}

function getHostPorts {
  # for each $host lets get a list of ports
  grep -hroP "$PORTS" hosts/$1/recon/nmap-* \
  | sort -h | uniq
}

getAquatonableHosts | while read host; do
  echo "[+] Running Aquatone $host"
  getHostPorts $host | while read port; do

    proto="http://"
    if echo $port | grep 443 ; then
      proto="https://"
    fi

    echo "${proto}${host}:$port"

    # now that we know what ports are open on the host
    # lets grab valid hostnames and create URLs for aquatone

    cat hosts/$hosts/hostname hosts/$host/recon/hostnames.txt 2> /dev/null \
    | sort -h | uniq \
    | sed 's|^.*$|'$proto'\0':$port'|'

  done | sort -h | uniq | aquatone -ports "$(echo $PORTS | sed 's/|/,/g')" -out hosts/$host/recon/aquatone
done


# now that we are done remove, empty aquatone reports
find hosts -name aquatone_urls.txt -size 0 \
  | while read apath; do
    rm -rf $(dirname $(echo $apath));
  done
