#! /bin/bash

CMD=""
ARG=""
if [ ! -z "$1" ]; then
  CMD="$1"
fi

if [ ! -z "$2" ]; then
  ARG="$2"
fi
# set -x
set -euo pipefail

echo this only ensures existing hosts have been scanned... >&2
sleep 2

function getHosts {
  if ! git pull > /dev/null 2>&1 ; then
    echo "[!] pull failed" >&2
  fi

  {
    find hosts -name 'nmap-*'  | cut -d/ -f2
    ls -d hosts/* | cut -d/ -f2
  } | ar-prune-blacklisted-ips | sort -h | uniq -c | grep -P "^\s+1 " | awk '{print $2}' | sort -R
}

function scanHost {
  host="$1"
  echo checking $host

  if ! compgen -G "hosts/$host/recon/nmap-punched*" > /dev/null 2>&1; then
    echo setting up host
    mkdir -p "hosts/$host/recon"
    if [ ! -f "hosts/$host/recon/.keep" ]; then
      touch "hosts/$host/recon/.keep"
      git add "hosts/$host/recon/.keep"
      git commit -m "new host: $host"
      git pull --rebase
      git push
    fi

    cd "hosts/$host"

    ar-recon-discover-services "$host" &
    sleep 1
    git add .
    git commit -m "nmap"
    if ! git pull --rebase ; then
      git commit -am "wtf is this..."
      git pull --rebase
    fi
    git push
    echo wait for nmap...
    wait
    cd -
    ar-update-flags.sh git
  #  ar-update-hostnames

    git add "hosts/$host"
    if git commit -m "recon host: $host" ; then
      git pull --rebase
      git push
    else
      echo "nothing happened"
    fi
  fi
  echo host check complete

  ARG=$($0 list | head -n1)
  if [ ! -z "$ARG" ] ; then
    exec $0 scan "$ARG"
  fi
}

if [ -z "$CMD" ] ; then
  echo "recon-next [ list | scan [ hostname/ip ] ]"
  exit
fi

if [ "$CMD" == "list" ]; then
  getHosts
  exit
fi

if [ "$CMD" == "scan" ] ; then
  if [ -z "$ARG" ] ; then
    ARG=$(getHosts | head -n1)
    echo "[!] Auto selected $ARG"
  fi
  scanHost "$ARG"
fi
