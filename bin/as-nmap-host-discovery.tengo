#!/usr/bin/env arsenic

fmt := import("fmt")
text := import("text")
os2 := import("os2")
os := import("os")
exec := import("exec")
filepath := import("filepath")
slice := import("slice")
arsenic := import("arsenic")
url := import("url")
script := import("script")
times := import("times")
log := import("log")
rand := import("rand")
git := import("git")
math := import("math")
cobra := import("cobra")


getNmapPortArg := func (portCount, portType) {

    popularPorts := format("sort -r -k3 /usr/share/nmap/nmap-services | awk '{print $2}' | grep '/%s' | cut -d/ -f1 | head -n %d", portType, portCount)

    cmd := os.exec("bash", "-c", popularPorts)
    check_err(cmd)
    nmapPortOut := cmd.output()

    if len(nmapPortOut) > 0 {
        nmapPorts := text.split(text.trim_space(nmapPortOut), "\n")
        return text.join(nmapPorts, ",")
    }

    return ""
}

rootCmd := cobra.root_cmd(script.name, "Perform host discovery scans port scans against the scope")
rootCmd.flags.stringp("scope", "s", "default", "scope name")
rootCmd.flags.stringp("file", "f", "", "file with targets to nmap")
rootCmd.flags.intp("port-count", "p", 100, "number of ports to use for host discovery")
rootCmd.flags.intp("timing-profile", "T", 4, "timing profile")
rootCmd.flags.boolp("ipv6", "6", false, "do a ipv6 port scan")

rootCmd.set_run(func(cmd, args) {
    ports := cmd.flags.get_int("port-count")
    timingProfile := cmd.flags.get_int("timing-profile")
    popularTCPPorts := format("sort -r -k3 /usr/share/nmap/nmap-services | awk '{print $2}' | grep '/tcp' | cut -d/ -f1 | head -n %d", ports)
    popularUDPPorts := format("sort -r -k3 /usr/share/nmap/nmap-services | awk '{print $2}' | grep '/udp' | cut -d/ -f1 | head -n %d", ports)
    scope := cmd.flags.get_string("scope")
    targetsFile := cmd.flags.get_string("file")
    isIPv6 := cmd.flags.get_bool("ipv6")

    if targetsFile == "" || !filepath.file_exists(targetsFile) {
        script.fatal(format("[!] Target file must not be empty. %s", targetsFile))
    }

    nmapTCPPortArg := getNmapPortArg(ports, "tcp")
    nmapUDPPortArg := getNmapPortArg(ports, "udp")

    nmapCmd := [
        "arsenic",
        "capture",
        "-s",
        scope,
        "--",
        "nmap",
        "-n",
        "-sn",
        "-PP",
        format("-PA%s", nmapTCPPortArg),
        format("-PS%s", nmapTCPPortArg),
        format("-PU%s", nmapUDPPortArg),
        "--resolve-all",
        "--randomize-hosts",
        format("-T%d", timingProfile),
        "--scan-delay",
        "50ms",
        "-iL",
        targetsFile
    ]

    if isIPv6 {
        nmapCmd = append(nmapCmd, "-6")
    }

    cmd := exec.cmd(nmapCmd[0], nmapCmd[1:]...)
    check_err(cmd)
    cmd.run()
})

err := rootCmd()
check_err(err)
